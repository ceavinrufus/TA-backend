
name: Tag new release version
# By default, this increments the current version with a patch increment. This behavior can be overridden by providing
# the forceVersion parameter to the workflow.

on:
  workflow_dispatch:
    inputs:
      forceVersion:
        description: 'Create new release version'
        required: false
        default: ''

jobs:
  create-release:
    name: Print Tag Released
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ github.event.inputs.forceVersion }}
          tag_prefix: ''
      
      - name: "Create Release"
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  publish-to-prod:
    name: Deploy PRODUCTION env
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials PRODUCTION organization
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: eu-north-1

      - name: 'Get Latest Released'
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          view_top: 1

      - name: Login to Amazon ECR in PRODUCTION organization
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR in PRODUCTION organization
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME_PROD }}
          IMAGE_TAG: ${{ steps.last_release.outputs.tag_name }}-released
        run: |
          # Build a docker container and push it to ECR in PRODUCTION organization
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR in PRODUCTION organization..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-${GITHUB_REF##*/}"

  notify-slack:
    runs-on: ubuntu-latest
    needs: publish-to-prod
    steps:
      - name: Send Notification to Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "üöÄ *Self Hosting - Production*\n\n*Release:* `${{ github.ref }}`\n*Environment:* `production`\n*Deployed by:* ${{ github.actor }}\n*Status:* ‚úÖ Success\n*Changes:* <${{ github.event.head_commit.url }}|View Release Details> üìù\n\nüïí Action: Please Update the Production Depolyment Image"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
